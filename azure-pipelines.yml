jobs:
  - job: macosx
    pool:
      vmImage: 'macOS-latest'
    steps:
      - script: |
          brew update
          brew install arpack eigen googletest
        displayName: 'Install dependencies'
      - task: CMake@1
        displayName: 'Setup with CMake'
        inputs:
          cmakeArgs: -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON ..
      - script: make
        displayName: 'Build with Make'
        workingDirectory: build
      - script: ctest --output-on-failure
        displayName: 'Test'
        workingDirectory: build
      - task: PublishBuildArtifacts@1
        displayName: 'Publish'
        inputs:
          pathtoPublish: 'bin'
          artifactName: latest-macosx
  - job: ubuntu
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - script: |
          sudo apt-get install -y libeigen3-dev libarpack2-dev libgtest-dev
        displayName: Install Ubuntu packages
      - task: CMake@1
        displayName: 'Setup with CMake'
        inputs:
          cmakeArgs: -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON ..
      - script: make
        displayName: 'Build with Make'
        workingDirectory: build
      - script: ctest --output-on-failure
        displayName: 'Test'
        workingDirectory: build
      - task: PublishBuildArtifacts@1
        displayName: 'Publish'
        inputs:
          pathtoPublish: 'bin'
          artifactName: latest-ubuntu
  - job: windows
    pool:
      vmImage: 'windows-latest'
    steps:
      - script: |
          conda create --yes --quiet --name myEnvironment -c conda-forge
        displayName: 'Create conda environment'
      - script: |
          call activate myEnvironment
          conda install --yes --quiet --name myEnvironment gtest eigen
        displayName: 'Install conda packages'
      - task: CMake@1
        displayName: 'Setup with CMake'
        inputs:
          cmakeArgs: -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON -DCMAKE_PREFIX_PATH=$(CONDA_PREFIX)\Library ..
      - script: cmake --build . --config Release
        displayName: 'Build with CMake'
        workingDirectory: build
      - script: ctest --output-on-failure -C Release
        displayName: 'Test'
        workingDirectory: build
      - task: PublishBuildArtifacts@1
        displayName: 'Publish'
        inputs:
          pathtoPublish: 'bin'
          artifactName: latest-windows
